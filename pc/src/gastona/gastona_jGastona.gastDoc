/*
   //(o) gastonaDoc_source notesDevelopment_sqlite

   ========================================================================================
   ================ documentation for WelcomeGastona.gast =================================
   ========================================================================================

#gastonaDoc#

   <docType>    jGastona
   <name>       "Introduction to jGastona"
   <groupInfo>
   <javaClass>
   <importance> 2
   <desc>       //The gastona way for client-server http applications and/or sites


   <help>
      //What is jGastona
      //-------------------
      //Listix command micoHttp implements a generic http server that can be programmed
      //using listix scripts to generate and or serve html, css and javascript contents
      //for the client, typically a browser. In this process any js framework can be used.
      //
      //Now, gastona is a framework for developing applications creating UI and implementing
      //application logic in a special fashion. Could be possible to extend these ideas and be
      //able also to develop http client-server applications using the gastona way ?
      //
      //jGastona is the approach to do that, a very first approach but already quite functional.
      //
      //jGastona script
      //----------------------
      //

   <examples>
      gastSample

      jGatona & Evalayout
      using jGatonaAJAXPost I
      using jGatonaAJAXPost II
      sample jGastona Boletin
      OnTheFly JAST Secuenci Editor
      OnTheFly JAST JAST Editor
      OnTheFly JAST deepTable Editor
      simple CodiFinestreta
      simple CodiFinestreta II
      js Visor
      jast Selector
      Browser Image Viewer

   <jGatona & Evalayout>
      //#listix#
      //
      //   <main>
      //       MICO, ONCE
      //
      //   <GET />
      //     //<html><style> * { font-family: Consolas; font-size: 18px;  } </style><body><script>
      //     //
      //     //@<:infile META-GASTONA/js/jGastonaEva-min.js>
      //     //
      //     //   var jast = jGastona (evaFileUTF82obj ("@<:encode-utf8 MAIN_JAST>"));
      //     //   jast.run ();
      //     //
      //     //</script></body></html>
      //
      //   <MAIN_JAST>
      //      //#javaj#
      //      //
      //      //   <layout of main>
      //      //      EVALAYOUT, 10, 10, 5, 5
      //      //
      //      //         ,            ,    X
      //      //         , bSwitchMain, form1
      //      //         , bMask1     ,   +
      //      //         , bMask2     ,   +
      //      //         , bUnmask    ,   +
      //      //        X,            ,   +
      //      //
      //      //   <layout of second>
      //      //      EVALAYOUT, 10, 10, 5, 5
      //      //
      //      //      ZZZ,            ,    X     ,
      //      //         , lLabel1    , eEdit1   , -
      //      //         , eSlider    , xMemo    , eData
      //      //         , lLabel4    ,    +     , iLlista
      //      //         , eColore    ,    +     , +
      //      //         , bSwitchBack,    +     , +
      //      //       X , rRadios    ,    +     , +
      //      //       X , kChekos    ,    +     , +
      //      //         , cCombo     ,    -     , +
      //      //
      //      //   <layout of form1>
      //      //      EVALAYOUT, 10, 10, 15, 15
      //      //
      //      //         ,           ,          , X
      //      //         , lLabel1   , eEdit1   , -
      //      //         , eSlider   , eData    , eEdit2
      //      //       X , xMemo     , -        , -
      //      //
      //      //   <layout of form2>
      //      //      EVALAYOUT, 10, 10, 5, 5
      //      //
      //      //         , X      ,       , 250    , 250
      //      //         , eData  , cCombo, lLabel4, lLabel1
      //      //       X , iLlista, --
      //      //
      //      //#data#
      //      //
      //      //   <eData type> date
      //      //   <eColore type> color
      //      //   <eColore> #FF8027
      //      //   <rRadios orientation> Y
      //      //   <rRadios>
      //      //       label, value
      //      //       radio, 51552
      //      //       gaga , 90292
      //      //       hero , 11010
      //      //
      //      //   <kChekos orientation> Y
      //      //   <kChekos>
      //      //       label, value
      //      //       xako , 1
      //      //       golo , 2
      //      //       rumpf, 3
      //      //
      //      //   <eSlider type> range
      //      //   <eSlider> 40
      //      //   <eSlider oninput>   //mensaka ("toc");
      //      //
      //      //   <iLlista>
      //      //       label, adress
      //      //       Hamburg, Hammerbrook
      //      //       Stuttgart, Nesenbachstrasse
      //      //       Dresden, Neustadt
      //      //
      //      //   <cCombo>
      //      //       label, value, phrase
      //      //       Catala, CAT , Heilandsack!
      //      //       Deutsch, DEU, Annyeonghaseyo
      //      //       Korean, KOR , Bon dia
      //      //
      //      //#listix#
      //      //
      //      //   <-- bSwitchMain>   //mask ("main", "second")
      //      //   <-- bSwitchBack>   //mask ("main")
      //      //   <-- bMask1>        //mask ("form1", "form2")
      //      //   <-- bMask2>        //mask ("form1", "xMemo")
      //      //   <-- bUnmask>       //mask ("form1")
      //      //
      //      //   <-- eColore>       //setData ("lLabel4", getDataCell("eColore"));
      //      //   <-- eSlider>       //setData ("lLabel4", getDataCell("eSlider"));
      //      //   <-- toc>           //setData ("lLabel3", getDataCell("eSlider"));
      //      //   <-- iLlista>       //setData ("lLabel1", getDataCell("iLlista selected.adress"));
      //      //   <-- cCombo>        //setData ("lLabel4", getDataCell("cCombo selected.phrase"));
      //

   <using jGatonaAJAXPost I>
      //#javaj#
      //
      //    <frames> oConso
      //
      //#listix#
      //
      //    <main>
      //       micohttp, start, monoMico
      //
      //   <GET />
      //     //<html><body>
      //     //
      //     //  <textarea id="salida"> </textarea>
      //     //
      //     //<script>
      //     //
      //     //@<:infile META-GASTONA/js/jGastonaEva-min.js>
      //     //
      //     //   var jgas = jGastona ();
      //     //   // jgas.start ();
      //     //
      //     //   jgas.AJAXPostRaw ("questionToU",
      //     //                     "this is the body of the question",
      //     //                     { "ajaxREQ-pi1" : "refining the question"},
      //     //                     function (txt, htp) {
      //     //                         document.getElementById ("salida").value =
      //     //                         "----RESP-HEADERS:\n" + htp.getAllResponseHeaders () +
      //     //                         "\n----RESP-BODY:\n" + txt +
      //     //                         "\n----RESP-END";
      //     //                     }
      //     //                     );
      //     //
      //     //</script></body></html>
      //
      //   <POST /questionToU>
      //     MICO, RESP_VAR=, monoMico, P1, uno, P2, dos, P3, "tres y cuatro etc"
      //     //you sent me the body:
      //     //
      //     LOOP, TEXT FILE, @<_bodyMemFileName>
      //         ,, @<value>
      //     //
      //     //and the header ajaxREQ-pi1 with value @<ajaxREQ-pi1>

   <using jGatonaAJAXPost II>
      //#javaj#
      //
      //    <frames> oConsola
      //
      //#listix#
      //
      //   <main>
      //       micohttp, start, monoMico
      //
      //   <GET />
      //     //<html><style> * { font-family: Consolas; font-size: 18px;  } </style><body><script>
      //     //
      //     //@<:infile META-GASTONA/js/jGastonaEva-min.js>
      //     //
      //     //   var respObj = {};
      //     //   var jgas = jGastona (evaFileUTF82obj ("@<:encode-utf8 MAIN_JAST>"));
      //     //   jgas.start ();
      //     //
      //     //</script></body></html>
      //
      //   <MAIN_JAST>
      //      //#javaj#
      //      //
      //      //   <layout of main>
      //      //        EVA, 12, 12, 8, 8
      //      //        grid, X       , X
      //      //            , h2Parameters, -
      //      //            , lP1
      //      //            , lP2
      //      //            , lP3
      //      //            , h2ResponseObject , h2ResponseUnit
      //      //           X, xResponseObject, xUnit
      //      //
      //      //#listix#
      //      //
      //      //  <main>
      //      //     //respObj = {};
      //      //     //AJAXSend ('questionToU', {
      //      //     //            body: 'this is the body of the question',
      //      //     //            params: { reqVar1 : 21321, reqVar2: 423 },
      //      //     //            headers: { XmyHeader : 'refining the question'}
      //      //     //           },
      //      //     //           respObj
      //      //     //          );
      //      //     //
      //      //
      //      //  <-- ajaxResponse questionToU>
      //      //     //setData ('lP1', 'myVar1 = [' + respObj['obj-params']['myVar1'] + ']');
      //      //     //setData ('lP2', 'myVar2 = [' + respObj['obj-params']['myVar2'] + ']');
      //      //     //setData ('lP3', 'myVar3 = [' + respObj['obj-params']['myVar3'] + ']');
      //      //     //setData ('xResponseObject', JSON.stringify (respObj, null, ' '));
      //      //     //setData ('xUnit', evaFileObj (respObj['obj-body']).toText ());
      //      //
      //
      //   <POST /questionToU>
      //     MICO, RESP_VAR=,, myVar1, uno, myVar2, dos, myVar3, "tres y cuatro etc"
      //     MICO, RESP_HEADER=,, Content-Type, text/eva
      //     //#data#
      //     //
      //     //   <body that you sent me>
      //     LOOP, TEXT FILE, @<_bodyMemFileName>
      //         ,,  //     //@<value>
      //     //
      //     //  <your header> XmyHeader, //@<XmyHeader>
      //     //  <and request params>
      //     //      reqVar1, //@<reqVar1>
      //     //      reqVar2, //@<reqVar2>


   <sample jGastona Boletin>
      //#javaj#
      //
      //    <frames> oConsola
      //
      //#listix#
      //
      //    <main>
      //       DB,, EXECUTE, //CREATE TABLE IF NOT EXISTS boletin (id INTEGER PRIMARY KEY AUTOINCREMENT, date, title, eventdesc);
      //       micohttp, start, mymico
      //
      //   <css>
      //       //     textarea {
      //       //         width: 100%; height: 150px; padding: 10px 10px; resize: none;
      //       //     }
      //
      //   <GET />
      //     //<html>
      //     //<head></head> <style> @<css> </style>
      //     //<body>
      //     //   <!-- nothing! -->
      //     //<script>
      //     //
      //     //@<:infile META-GASTONA/js/jGastonaEva-min.js>
      //     //
      //     //   var jgas = jGastona (evaFileUTF82obj ("@<:encode-utf-8 MAIN_JGAST>"));
      //     //   jgas.start ();
      //     //
      //     //</script></body></html>
      //
      //   <MAIN_JGAST>
      //      //#javaj#
      //      //
      //      //   <layout of main>
      //      //        EVA, 15, 15, 20, 20
      //      //        grid, X           , X
      //      //            , lNew Event  , lBulletin Board
      //      //          X , layInput    , dBoletin
      //      //
      //      //   <layout of layInput>
      //      //        EVA, 15, 15, 20, 20
      //      //        grid,             , X
      //      //            , eEventDate  , eEventTitle
      //      //          X , xEventDesc  , -
      //      //            , bSave       , -
      //      //
      //      //#data#
      //      //
      //      //    <eEventDate type>   //date
      //      //    <dBoletin>
      //      //
      //      //#listix#
      //      //
      //      //  <-- bSave>
      //      //     //AJAXSend ("insertEvent");
      //      //
      //      //  <-- ajaxResponse insertEvent>
      //      //     //AJAXgetDataForId ("dBoletin");
      //
      //   <POST /insertEvent>
      //      LSX, StoreRecord,
      //         , LOAD DATA, @<_bodyMemFileName>, data
      //      //ok
      //
      //   <StoreRecord>
      //      DB,, EXECUTE, //INSERT INTO boletin (date, title, eventdesc) VALUES ('@<eEventDate>', '@<:encode eEventTitle>', '@<:encode xEventDesc>');
      //
      //   <DEL_COMMAND> //jgas.AJAXgetDataForId ('dBoletin', 'removeId=@<id>');
      //
      //   <POST /getDataForId>
      //      LSX, checkRemoveId
      //      //<table>
      //      //
      //      LOOP, SQL,, //SELECT * FROM boletin LIMIT 50
      //          ,, // <tr> <td>
      //          ,, //       <table> <tr> <td> @<date> <td> @<:decode-utf8 title> <td> <button onclick="@<DEL_COMMAND>">Delete</button></tr>
      //          ,, //               <tr> <td colspan="3"> <textarea>@<:decode-utf8 eventdesc></textarea> </tr>
      //          ,, //       </table>
      //          ,, // </tr>
      //      //
      //      //</table>
      //
      //   <checkRemoveId>
      //      CHECK, VAR, removeId
      //      DB,, EXECUTE, //DELETE FROM boletin WHERE id = @<removeId> ;


   <OnTheFly JAST Secuenci Editor>
      //   <!  We serve an embedded JAST that is an "on the fly" Editor of Sequenci diagrams with a couple of samples
      //
      //#data#
      //
      //    <JAST_script>
      //       //#javaj#
      //       //
      //       //   <layout of main>
      //       //      EVALAYOUT, 20, 20, 15, 15
      //       //
      //       //         , X           ,    X                        , X
      //       //         , lSequenciInput, lDiagram output on the fly, eDistAgents
      //       //       X , xScript       , xOnFlyOutput              , -
      //       //
      //       //#data#
      //       //
      //       //   <eDistAgents type> range
      //       //   <eDistAgents> 40
      //       //
      //       //   <eDistAgents oninput>   //mensaka ("reflexa");
      //       //   <xScript onkeyup>       //mensaka ("reflexa");
      //       //
      //       //   <xScript>
      //       //      //  A=User
      //       //      //  B=Interface
      //       //      //  C=Server
      //       //      //
      //       //      //  A   >>   B   doThisAction
      //       //      //  B   >>   C   theAction
      //       //      //  B   <<   C   What_action?
      //       //      //  A   <<   B   done!
      //       //
      //       //#listix#
      //       //
      //       //   <main>
      //       //      //mensaka ("reflexa");
      //       //
      //       //   <-- reflexa>
      //       //      //var arr = getDataAsTextArray("xScript");
      //       //      //for (var ii = 0; ii < arr.length; ii ++) arr[ii] = arr[ii].replace(/^\s*/, "").replace(/ +/g, ',');
      //       //      //var evaStr = "#data#\n<distanceAgents> " + getDataCell("eDistAgents") + "\n<sequenceTable> agent1, dir, agent2, message\n" + arr.join ("\n");
      //       //      //setData("xOnFlyOutput", conSequenciPlain (evaFileStr2obj (evaStr)["data"]));
      //       //
      //
      //#listix#
      //
      //   <main>
      //      MICO, ONCE
      //
      //   <GET />
      //     //<html>
      //     //<style>
      //     //
      //     // * { font-family : Consolas; }
      //     //
      //     //</style>
      //     //<body>
      //     //
      //     //<script id="mainJast" type="jast">
      //     //
      //     LSX, JAST_script
      //     //
      //     //</script>
      //     //
      //     //<script>
      //     //
      //     //@<:infile META-GASTONA/js/jGastonaEva-min.js>
      //     //
      //     //@<:infile META-GASTONA/js/conSequenciPlain.js>
      //     //
      //     //   var jast = jGastona (evaFileStr2obj (document.getElementById ("mainJast").text));
      //     //   jast.run ();
      //     //</script>
      //     //</body></html>
      //
      //#**#

   <OnTheFly JAST JAST Editor>
      //   <!  We serve an embedded JAST file that is an "on the fly" JAST editor and have itself a JAST sample embedded!!
      //
      //#data#
      //
      //    <JAST_script>
      //       //#javaj#
      //       //
      //       //   <layout of main>
      //       //      EVALAYOUT, 20, 20, 15, 15
      //       //
      //       //         , X           ,    X
      //       //         , lJAST Script, lGUI on the fly
      //       //       X , xScript     , dOnFlyOutput
      //       //
      //       //#data#
      //       //
      //       //   <xScript onkeyup>
      //       //      //mensaka ("reflexa");
      //       //
      //       //   <xScript>
      //       //      //#javaj#
      //       //      //
      //       //      //   <layout of main>
      //       //      //      EVA, 50, 50, 14, 14
      //       //      //
      //       //      //         ,       , X
      //       //      //         , lLabel, eEntry
      //       //      //         , bButton, -
      //       //      //       X , xText, -
      //       //      //
      //       //      //#data#
      //       //      //
      //       //      //   <lLabel> Enter some text
      //       //      //
      //       //      //#listix#
      //       //      //
      //       //      //   <-- bButton>
      //       //      //      //alert ("you entered " + getData("eEntry") + ", isn't it ?");
      //       //
      //       //
      //       //#listix#
      //       //
      //       //   <main>
      //       //      //mensaka ("reflexa");
      //       //
      //       //   <-- reflexa>
      //       //      //jGastona (evaFileStr2obj (getDataAsTextArray("xScript").join ("\n")), "dOnFlyOutput").start ();
      //       //
      //
      //#listix#
      //
      //   <main>
      //      MICO, ONCE
      //
      //   <GET />
      //     //<!DOCTYPE html>
      //     //<html>
      //     //<style>
      //     //
      //     // * { font-family : Consolas; }
      //     //
      //     //</style>
      //     //<body>
      //     //
      //     //<script id="mainJast" type="jast">
      //     //
      //     LSX, JAST_script
      //     //
      //     //</script>
      //     //
      //     //<script>
      //     //
      //     //@<:infile META-GASTONA/js/jGastonaEva-min.js>
      //     //
      //     //   var jast = jGastona (evaFileStr2obj (document.getElementById ("mainJast").text));
      //     //   jast.run ();
      //     //
      //     //</script>
      //     //</body></html>
      //
      //#**#

   <OnTheFly JAST deepTable Editor>
      //   <!  Generate sql queries with connections according with deepTable rules
      //   <!  see https://www.codeproject.com/Articles/75601/The-Deep-Table
      //
      //#data#
      //
      //    <JAST_script>
      //       //#javaj#
      //       //
      //       //   <layout of main>
      //       //      EVA, 7, 7, 4, 4
      //       //
      //       //         ,         , X
      //       //         , lSample, rSamples
      //       //      X  , xScript, -
      //       //         , bGenerate, -
      //       //         , lResulting query, -
      //       //      X  , xOutput, -
      //       //
      //       //#data#
      //       //
      //       //   <lSample> Choose sample:
      //       //
      //       //   <rSamples>
      //       //      label,
      //       //
      //       //      simple
      //       //      complex
      //       //      recurrent
      //       //
      //       //   <data simple>
      //       //      //conn: artist, tabSongs, artId, tabArtists, id
      //       //      //
      //       //      //deep: tabSongs, artId, artist->name, title
      //       //      //
      //       //      //------------------------
      //       //      // This sample creates one connection between two tables tabSongs and tabArtists
      //       //      // and output a deep sql from the now "deep" table tabSongs. Simulating the
      //       //      // hypothetical DEEP query
      //       //      //
      //       //      //     DEEP_SELECT artId, artist->name, title FROM DEEP_tabSongs
      //       //      //
      //       //      //     Exercise 1: add to the given select (deep) a new column (any name) and a new deep column (artist->xxx)
      //       //      //
      //       //      //     Exercise 2: supossing we have a thrid table tabCountries,
      //       //      //                  add a new connection with tabArtists and tabCountries (using any ids)
      //       //      //                  add to the query a new deep column (p.e. artist->country->name if your connection is called "country")
      //       //      //
      //       //
      //       //   <data complex>
      //       //      //conn: customer, tSales     , customerId , tCompanies    , id
      //       //      //conn: product , tSales     , productId  , tProducts     , prodID
      //       //      //conn: provider, tProducts  , providerID , tCompanies    , id
      //       //      //conn: country , tCompanies , countryId  , tISOCountries , isoA2
      //       //      //
      //       //      //deep: tSales, date, product->name
      //       //      //deep: tSales, id, date, customer->name, customer->country->name, product->name, quantity, product->provider->name, product->provider->country->name
      //       //      //
      //       //      //------------------------
      //       //      //    This sample has been taken from the article https://www.codeproject.com/Articles/75601/The-Deep-Table
      //       //      //    it joins 4 tables (tSales, tProducts, tCompanies and tISOCountries) using 4 connections
      //       //      //    (customer, product, provider and country).
      //       //      //    It outputs two deep selects, the first one simple of depth 1 and the second one with much deeper columns.
      //       //
      //       //   <data recurrent>
      //       //      //conn: father, tabPeople, fatherID, tabPeople, ID
      //       //      //conn: mother, tabPeople, motherID, tabPeople, ID
      //       //      //
      //       //      //deep: tabPeople, name, father->name, mother->name, mother->father->name, mother->mother->name, mother->mother->father->name
      //       //      //
      //       //      //------------------------
      //       //      //    This sample demonstrates recursive joins of a table with itself.
      //       //      //    We use just one table:
      //       //      //          tabPeople (ID, name, fatherID, motherID)
      //       //      //    and by creating two strategic connections: father and mother, we are able to query arbitrary deep columns
      //       //      //    like "mother->mother->father->name" for the name of the father of the mother of the mother of someone.
      //       //
      //       //#listix#
      //       //
      //       //   <-- rSamples>
      //       //      //setData ("xScript", getData("data " + getData("rSamples selected.label")));
      //       //
      //       //   <-- bGenerate>
      //       //      //setData ("xOutput", processSample (getData("xScript")));
      //       //      //
      //
      //#listix#
      //
      //   <main>
      //      MICO, ONCE
      //
      //   <GET />
      //     //<!DOCTYPE html>
      //     //<html>
      //     //<style>
      //     //
      //     // * { font-family : Consolas; }
      //     //
      //     //</style>
      //     //<body>
      //     //
      //     //<script id="mainJast" type="jast">
      //     //
      //     LSX, JAST_script
      //     //
      //     //</script>
      //     //
      //     //<script>
      //     //
      //     //@<:infile META-GASTONA/js/jGastonaEva-min.js>
      //     //@<:infile META-GASTONA/js/deepTable.js>
      //     //
      //     //   function processSample (arr)
      //     //   {
      //     //      var dee = deepTable ();
      //     //
      //     //      var sal = [];
      //     //
      //     //      for (var ii in arr) {
      //     //         var lin = arr[ii][0];
      //     //         var indx = lin.indexOf ("conn:");
      //     //         if (indx >= 0)
      //     //            dee.addConnection (lin.substring(indx+6));
      //     //         else {
      //     //            indx = lin.indexOf ("deep:");
      //     //            if (indx !== -1) {
      //     //               var els = lin.substring(indx+6).split (",");
      //     //               sal.push (dee.deepSelect (els[0], els.slice(1), true));
      //     //            }
      //     //         }
      //     //      }
      //     //      return sal.join ("\n\n");
      //     //   }
      //     //
      //     //   var jast = jGastona (evaFileStr2obj (document.getElementById ("mainJast").text));
      //     //   jast.run ();
      //     //
      //     //</script>
      //     //</body></html>
      //
      //#**#

   <Browser Image Viewer>
      //#javaj#
      //
      //   <frames> oServer, PictureViewer server, 400, 200
      //
      //#listix#
      //
      //   <PATH_IMAGES> @<:sys user.home>/Pictures
      //
      //   <TOTAL> 0
      //   <PAGE_COLS> 4
      //   <PAGE_ROWS> 8
      //
      //   <SLIDER_MAX> =, (TOTAL-1)/(PAGE_COLS*PAGE_ROWS)
      //
      //   <extensions> //jpg, jpeg, png, PNG, gif
      //
      //   <main>
      //      SETPROP, user.dir, @<PATH_IMAGES>
      //      VAR=, Catalog, filename
      //      LOOP, FILES, ., @<extensions>
      //          ,, VAR+, Catalog, @<:path-linux fullSubPath>
      //          ,, NUM=, TOTAL, TOTAL+1
      //      MICO, start
      //
      //   <POST /getDataForId>
      //      NUM=, K, 0
      //      LOOP, VAR, Catalog
      //          , START ROW, page * PAGE_COLS * PAGE_ROWS
      //          , LIMIT ROWS, PAGE_COLS * PAGE_ROWS
      //          , HEAD, VAR=, pralPath, @<:path-linux filename>
      //          ,, //mSec@<secINDX>:@<:path-linux filename>
      //          ,, NUM=, K, K+1
      //      //
      //      //
      //      //@<pralPath>
      //
      //   <POST /doExplore>
      //         CHECK, VAR, pathOpen
      //         LAUNCH, //explorer.exe /n,/e,/select,"@<:path :sys user.dir>\@<:path pathOpen>"
      //
      //   <secINDX> JS, //Math.floor(@<K> / @<PAGE_COLS>)+""+Math.floor(@<K> % @<PAGE_COLS>)
      //
      //   <GET />
      //         //<html> <style> label { font-family: Consolas, color: lightgray } </style> <body bgcolor="black">
      //      //<script id="mainJast" type="jast">
      //      //      #javaj#
      //      //
      //      //         <layout of main>
      //      //            EVALAYOUT, 4, 4, 3, 3
      //      //
      //         //                     , X3   ,  X
      //         //                  X  , mPral,  layGrid
      //         //                     ,   +  ,  bExploreCurrent
      //         //                     ,   +  ,  eSlider
      //      //
      //         //          <layout of layAlone>
      //      //                EVA, 4, 4, 2, 2
      //      //                   , X
      //      //                 X , mPral
      //      //
      //         //          <layout of layGrid>
      //      //            EVALAYOUT, 4, 4, 3, 3
      //      //
      //      LOOP, FOR, RR, 0, PAGE_ROWS - 1
      //          , HEAD, LOOP, FOR, CC, 1, PAGE_COLS
      //          , HEAD,     , LINK, ""
      //          , HEAD,     ,, //     , X
      //          , HEAD, //
      //          , HEAD, //
      //          ,, //      X,
      //          ,, LOOP, FOR, CC, 0, PAGE_COLS - 1
      //          ,,     , LINK, ", "
      //          ,,     ,, //mSec@<RR>@<CC>
      //      //
      //      //
      //      //    #data#
      //      //
      //      //         <eSlider type> range
      //      //         <eSlider> 0
      //      //         <eSlider min> 0
      //      //         <eSlider max> @<SLIDER_MAX>
      //      //         <eSlider oninput>   //mensaka ("requestPictures")
      //         //         <lPageNr> 0/N
      //      //
      //      //      #listix#
      //      //
      //      //         <main>
      //      //            //mensaka ("requestPictures")
      //      //
      //      //         <-- mPral>
      //         //            //mask('main', 'layAlone', '');
      //      //
      //      //         <-- bExploreCurrent>
      //         //            //AJAXSend ("doExplore", "pathOpen=" + getDataCell("mPral"));
      //         //
      //         //         <-- updateMain>
      //         //            //setData ("bExploreCurrent", getDataCell("mPral"));
      //      //
      //      //         <-- requestPictures>
      //      //            //AJAXgetDataForId ("mPral", "page=" + getDataCell("eSlider"), true);
      //         //            //
      //         //            //setData ("lPageNr", " " + getDataCell("eSlider") + "/" + getDataCell("eSlider max"));
      //      //
      //      LOOP, FOR, RR, 0, PAGE_ROWS - 1
      //          ,, LOOP, FOR, CC, 0, PAGE_COLS - 1
      //            ,,     ,, //         <-- mSec@<RR>@<CC>>  //setData ("mPral", getData("mSec@<RR>@<CC>")); mensaka ("updateMain");
      //      //
      //      //</script>
      //      //
      //      //<script>
      //      //
      //      //@<:infile META-GASTONA/js/jGastonaEva-min.js>
      //      //
      //      //   var jas = jGastona (evaFileStr2obj (document.getElementById ("mainJast").text));
      //      //   jas.run ();
      //      //
      //      //</script></body></html>
      //      //
   <simple CodiFinestreta>
      //#listix#
      //
      //   <main>
      //      MICO, ONCE
      //
      //   <GET />
      //      //<html>
      //      //<body>
      //      //      <div id="place" style="width:400 height: 400"></div>
      //      //
      //      //<script id="laData" type="notKnown"> // This is a text to enjoy much
      //      // // aha ha trobo
      //      //
      //      // function Merlon(int same, float trobo=-4.32) {
      //      //    return "trobo baste!";
      //      // }
      //      // # end of files</script>
      //      //
      //      //<script>
      //      //
      //      //@<:infile META-GASTONA/js/codiFinestreta.js>
      //      //
      //      //   window.onload = function(e)
      //      //   {
      //      //       var psin = codiFinestreta (document.getElementById("laData").text.split ("\n"), 1, /trobo/g);
      //      //       var edi = document.getElementById ("place");
      //      //       psin.setFont("Consolas");
      //      //       psin.changeTheme ("fusta");
      //      //       psin.attachTo (edi);
      //      //       psin.gotoLine (4);
      //      //   };
      //      //
      //      //</script>
      //      //</body>
      //      //</html>

   <simple CodiFinestreta II>
      //#listix#
      //
      //   <main>
      //      MICO, ONCE
      //
      //   <GET />
      //      //<html>
      //      //<body>
      //      //
      //      //   <!-- some settings -->
      //      //   <button onclick="colifi.changeTheme('fusta')">Fusta</button>
      //      //   <button onclick="colifi.changeTheme('clar')">Clar</button>
      //      //   <button onclick="colifi.changeTheme('sang')">Sang</button>
      //      //   <button onclick="colifi.changeTheme('fefbec 6684e1 b854d4 60ac39 999580 1fad83 20201d d73737')">Atelier Dune Light</button>
      //      //
      //      //   <button onclick="colifi.changeFont('monospace')">monospace</button>
      //      //   <button onclick="colifi.changeFont('Consolas')">Consolas</button>
      //      //   <button onclick="colifi.changeFont('Courier New')">Courier New</button>
      //      //   <br><br>
      //      //
      //      //   <!-- the container -->
      //      //   <div id="container" style="width: 600px; height: 300px"></div>
      //      //
      //      //   <!-- the code sample -->
      //      //   <script id="codeSample" type="other">...
      //      ////Here comes the sample code
      //      ////in the call to codiFinestreta you give the code text,
      //      ////the line number to start with and the element to mark
      //      ////as regular expression
      //      //
      //      //if (id == 3) {
      //      //   callMyFunction ("literal", .393f, false);
      //      //}
      //      //   String pases tipus es (que) te pases public type static etc etc ...
      //      //   literal := "this element to mark is also here";
      //      //...</script>
      //      //
      //      //
      //      //   <!-- highlighting with codiFinestreta -->
      //      //   <script>
      //      //
      //      //@<:infile META-GASTONA/js/codiFinestreta.js>
      //      //
      //      //      var colifi; // need to be global for the buttons
      //      //      document.body.onload = function () {
      //      //         colifi = codiFinestreta (document.getElementById ("codeSample").text.split ("\n"), 142, /element to mark/g);
      //      //         colifi.attachTo (document.getElementById ("container"));
      //      //         colifi.gotoLine (1);
      //      //      }
      //      //   </script>
      //      //
      //      //</body>
      //      //</html>

   <js Visor>
      //#javaj#
      //
      //   <frames> o
      //#data#
      //
      //    <JAST_script>
      //      //#javaj#
      //      //
      //      //   <layout of main>
      //      //      EVA, 20, 20, 15, 15
      //      //
      //      //         , 300      ,   X
      //      //         , ljs Files, dEdi
      //      //       X , iFiles   , +
      //      //
      //      //#data#
      //      //
      //      //   <iFiles>
      //      //     name
      //      //
      //      //     Eva.js
      //      //     EvaLayout.js
      //      //     executorJS.lsx.js
      //      //
      //      //     httSaco.js
      //      //     jGastonaEva-dbg.js
      //      //     jGastonaEva-dbg2.js
      //      //     jGastonaEva-min.js
      //      //     jGastonaLit.js
      //      //     LayoutManager.js
      //      //     zWidgetsHtml.js
      //      //
      //      //     marketes.js
      //      //     trassos2D.js
      //      //     codiFinestreta.js
      //      //
      //      //     conSequenciCanvas.js
      //      //     conSequenciGraffiti.js
      //      //     conSequenciGraffitiNoCanvas.js
      //      //     conSequenciPlain.js
      //      //     conSequenciPlainExt.js
      //      //
      //      //
      //      //#listix#
      //      //
      //      //   <-- iFiles>
      //      //      //AJAXSend ("getEditorContent",
      //      //      //           "filename=" + getDataCell("iFiles selected.name"),
      //      //      //           function contenta (content) { psin.loadText (content.split ("\n")); });
      //
      //#listix#
      //
      //   <main>
      //      MICO, START
      //
      //   <GET />
      //     //<!DOCTYPE html>
      //     //<html>
      //     //<body>
      //     //
      //     //<script id="mainJast" type="jast">
      //     //
      //     LSX, JAST_script
      //     //
      //     //</script>
      //     //
      //     //<script>
      //     //
      //     //@<:infile META-GASTONA/js/jGastonaEva-min.js>
      //     //@<:infile META-GASTONA/js/codiFinestreta.js>
      //     //
      //     //   var jast = jGastona (evaFileStr2obj (document.getElementById ("mainJast").text));
      //     //   jast.run ();
      //     //   var psin = codiFinestreta ("", 1, /function/g);
      //     //   var edi = document.getElementById ("dEdi");
      //     //   psin.attachTo (edi);
      //     //
      //     //</script>
      //     //</body></html>
      //
      //   <POST /getEditorContent>
      //      IN FILE, META-GASTONA/js/@<filename>
      //             , SOLVE, 0
      //
      //#**#

   <jast Selector>
      //
      //    A "jast" launcher in "jast" language!
      //    what else do you jast ?
      //
      //#listix#
      //
      //    <main>
      //       GAST, META-GASTONA/utilApp/std/jastServer.gast, META-GASTONA/jast/jastSelector.jast

#**FIN_EVA#

*/



