#javaj#

   <layout of FmarkSelector>
      EVA, 4, 4, 2, 2

          ,    , , X
          , kOnlyMainSQL, -, -
        X , aMarkAll, -, -
         , lCombinations, -, -
         , kMarkColumn, kAND, kNOT
       X , iMarkCompat, -, -
         , lNew mark, -, -
         , lNode, eNode, -
         , lMark, eMarkName, -
         , bSaveMark, bRemoveMark, -

#data#

   <eNode> //common/def

   <aMarkAll rootTitle> Marks
   <iMarkCompat visibleColumns> markname

   <kMarkColumn selected> 0
   <kAND selected> 0
   <kNOT selected> 0
   <kOnlyMainSQL selected> 0

#listix#

   <MARKTABLE> thisdb_TableMarks

   <markSelectorRefresh>
      -->, aMarkAll data!, sqlSelect, //SELECT node||"/"||markname AS node FROM @<MARKTABLE> ORDER BY node
      LSX, markSelectorResetAdditional

   <markSelectorResetAdditional>
      -->, iMarkCompat data!, sqlSelect, // SELECT markname FROM @<MARKTABLE> WHERE markname = ''

   <-- bSaveMark>
      CHECK, VAR, sTabala sqlSelect, BOX, I, //No select to store
      CHECK, !=, "", @<eMarkName>, BOX, I, //Provide a name for the mark
      DB,, EXECUTE, @<SQL-INSERT-MARK>
      -->, eMarkName data!,,  ""
      LSX, markSelectorRefresh

   <-- bRemoveMark>
      DB,, EXECUTE, //DELETE FROM @<MARKTABLE> WHERE node = '@<:encode eNode>' AND markname = '@<:encode eMarkName>' ;
      -->, eMarkName data!,,  ""
      LSX, markSelectorRefresh

   <SQL-INSERT-MARK>
      VAR=, trimmedSql        , @<JS_trim_sTabalasqlSelect>
      VAR=, trimmedExtraFilter, @<JS_trim_sTabalasqlExtraFilter>

      //CREATE TABLE IF NOT EXISTS @<MARKTABLE> (node, markname, mainselect, extrawhere);
      //DELETE FROM @<MARKTABLE> WHERE node = '@<:encode eNode>' AND markname = '@<:encode eMarkName>' ;
      //INSERT INTO @<MARKTABLE> VALUES ('@<:encode eNode>', '@<:encode eMarkName>', '@<:encode trimmedSql>',
      CHECK, VAR, sTabala sqlExtraFilter
           ,     , //'@<:encode trimmedExtraFilter>');
           , ELSE, //'');

   <-- aMarkAll>
      CHECK, VAR, aMarkAll selectedPath, LSX, markSelectorResetAdditional
      LOOP, SQL,, //SELECT * FROM @<MARKTABLE> WHERE node||"/"||markname = '@<aMarkAll selectedPath>' LIMIT 1
          ,, -->, iMarkCompat data!, sqlSelect, // SELECT * FROM @<MARKTABLE> WHERE mainselect = '@<:encode mainselect>'
          ,, -->, eNode data!,, @<node>
          ,, -->, eMarkName data!,, @<markname>
          ,, VAR=, ASEL_mainSQL, @<mainselect>
          ,, VAR=, ASEL_extraSQL, @<extrawhere>
          ,, LSX, -- kOnlyMainSQL

   <-- kOnlyMainSQL>
      IN CASE, @<kOnlyMainSQL selected>
         ,   1 , -->, UPDATE_SQLGRID, //@<ASEL_mainSQL>
         , ELSE, -->, UPDATE_SQLGRID, //SELECT * FROM (@<ASEL_mainSQL>) @<ASEL_extraSQL>

   <-- iMarkCompat>
      LSX, markSelectSendSelection

   <-- kMarkColumn>
      LSX, markSelectSendSelection
      
   <-- kAND>
      LSX, markSelectSendSelection

   <-- kNOT>
      LSX, markSelectSendSelection

   <markSelectSendSelection>
      CHECK, VAR, iMarkCompat subTableSelection,
      LSX, DBG(m), @<SQL_MARKS>
      -->, UPDATE_SQLGRID, @<SQL_MARKS>

   <SQL_MARKS>
      //SELECT
      //     @<COLUMN_MARK>
      //     *
      // FROM (@<FIRST_mainselect>)
      // WHERE rowid
      IN CASE, @<kNOT selected>
             ,    1, // NOT IN
             , ELSE, // IN
      // (
      LOOP, VAR, iMarkCompat subTableSelection
          , LINK, @<SQL_UNION_INTERSECT>
          ,     , // SELECT rowid FROM (@<JS_PlusRowid>) @<extrawhere>
      // )
      // ORDER BY rowid

   <FIRST_mainselect>
      LOOP, VAR, iMarkCompat subTableSelection
          , LIMIT ROWS, 1
          ,, @<JS_PlusRowid>

   <SQL_UNION_INTERSECT>
      IN CASE, @<kAND selected>
           , 1   , INTERSECT
           , ELSE, UNION
      
   <COLUMN_MARK>
      CHECK, =, 1, @<kMarkColumn selected>
      //    CASE
      LOOP, VAR, iMarkCompat subTableSelection
          ,     , // WHEN @<JS_Cond> THEN '@<markname>'
      //    ELSE "---" END AS colMark,

   <JS_Cond>
      JS, //"1@<:encode-strjs extrawhere>".replace ("1WHERE ", "")

   <JS_PlusRowid>
      JS, //"@<:encode-strjs mainselect>".replace ("SELECT ", "SELECT rowid, ")

   <JS_trim_sTabalasqlSelect>
      JS, //"@<:encode-strjs sTabala sqlSelect>".replace(/^\s+|\s+$/g, '')

   <JS_trim_sTabalasqlExtraFilter>
      JS, //"@<:encode-strjs sTabala sqlExtraFilter>".replace(/^\s+|\s+$/g, '')

#**#
